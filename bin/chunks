#! /usr/bin/env ruby

require_relative "../boot"

path = ARGV.shift
text = File.read(path)
lines = text.split("\n")

ac_scores = []
scores = []

lines.select { |ln| ln =~ /\S/ }.map do |line|
  begin
    chunks = Chunks.new(line)
    chunks.process_line
    if chunks.missing.empty?
      puts "no problems"
    else
      puts "missing: #{chunks.missing} -> #{chunks.missing_score}"
      ac_scores << chunks.missing_score
    end
  rescue Chunks::ParseError => e
    puts "Got an unexpected #{e.encountered}"
    scores << e.score
  end
end

puts "part 1 total: #{scores.sum}"

middle = (ac_scores.length - 1) / 2
puts "part 2 middle: #{ac_scores.sort[middle]}"

